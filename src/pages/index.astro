---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Day Formatter for Streamer">
	<main>
		<h1>Welcome to <br><span class="text-gradient">Day Formatter</span></h1>
		<div class="text">
			<p>日付を与えて、改行込みのフォーマットで1週間分の日付を生成します。</p>
		</div>
		<div class="box">
			<input type="date" id="startDate">
		</div>
		<button id="convertBtn">生成！</button>
		<div class="box">
			<textarea id="output" cols="30" rows="10">結果が出ます</textarea>
		</div>
		<footer>
			<p>Created by <a href="https://numecha.vercel.app/" target="_blank" rel="noopener noreferrer">Numecha</a>.</p>
		</footer>
	</main>
</Layout>

<style lang="scss">
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
		text-align: center;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.box {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
		textarea {
			height: 280px;
		}
	}
	.text {
		text-align: center;
		.sample {
			font-size: 13px;
			line-height: 1.2;
			color: #666;
		}
	}
	textarea {
		font-size: 13px;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	footer {
		margin-top: 30px;
		text-align: center;
	}
	
</style>

<script>
	const startDateInput = document.getElementById('startDate') as HTMLInputElement;
	const output = document.getElementById('output')as HTMLInputElement
	// 今日の日付をデフォルトで入れる
	const today = new Date().toISOString().split('T')[0];
	startDateInput.value = today;
	// 1週間分の日付を生成
	function generateWeekDates() {
		const startDate = new Date(startDateInput.value);
		const dates: Date[] = [];
		// 1週間分の日付を生成
		for (let i = 0; i < 7; i++) {
			const currentDate = new Date(startDate);
			currentDate.setDate(startDate.getDate() + i);
			dates.push(currentDate);
		}
		// フォーマットされた日付文字列を生成
		const formattedDates = dates.map(date => {
			const month = (date.getMonth() + 1).toString().padStart(2, '0');
			const day = date.getDate().toString().padStart(2, '0');
			return `${month}.${day}`;
		});
		// 改行を含んだフォーマットに整形
		output.value = formattedDates.join('\n\n');
	}
	const convertBtn = document.getElementById('convertBtn');
	convertBtn?.addEventListener('click', () => generateWeekDates());
</script>
